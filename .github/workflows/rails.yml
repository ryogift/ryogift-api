# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Rails

on:
  push:
    branches: [ main ]
    paths-ignore:
      - README.md
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    container:
      image: ruby:3.0.3
      env:
        RAILS_ENV: test
        RAILS_DATABASE_HOST: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        RYOGIFT_CLIENT_URL: https://ryo.gift
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Cache bundle gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-${{ env.cache-name }}-
            ${{ runner.os }}-gem-
            ${{ runner.os }}-
      - name: Install Bundler
        run: gem install bundler --no-document -v $(grep "BUNDLED WITH" -1 Gemfile.lock | tail -n 1)
      - name: Bundle install
        run: bundle install --path=vendor/bundle --jobs 4 --retry 3
      - name: DB setup (parallel)
        run: bundle exec rails parallel:setup
      - name: Run rspec (parallel)
        run: bundle exec rails parallel:spec
